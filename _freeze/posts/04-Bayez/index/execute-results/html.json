{
  "hash": "51850f3eb74d55ad8de1105066394c01",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mini-Project\"\nformat: html\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n##This project will attempt to answer the question of what is the probability\n##Nadla wins a point on his own serve against Novak Djokovic,at the French Open ?\n\n##To answer this question, we will use bayesian analysis where we will make some\n##informed assumptions paired with availiable data to create a probability that, \n##Nadal will wins a point on his own serve against Djokovic, at the French Open\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nps <- seq(0.1, 200, length.out = 5000)\n\n\n##non-informed prior\n##beta(1,1)\nnoninformative_alpha <- 1\nnoninformative_beta <- 1\n\nnoninformative_prior <- dbeta(ps,\n                              noninformative_alpha, noninformative_beta)\n\n##Informative Prior with Match Stats\nmatch_mean <- 46 / 66\nmatch_se <- 0.05657\nmatch_var <- match_se^2\n\ntarget_mean <- match_mean\ntarget_var <- match_var\n\ninformative_alphas <- seq(0.1, 200, length.out = 5000)\ninformative_betas <- (informative_alphas * (1 - target_mean)) / target_mean\ninformative_vars <- (informative_alphas * informative_betas) / ((informative_alphas + informative_betas)^2 * (informative_alphas + informative_betas + 1))\n\nparam_df <- tibble(informative_alphas, informative_betas, informative_vars) |>\n  mutate(dist_to_target = abs(informative_vars - target_var))\n\nbest_params <- param_df |> filter(dist_to_target == min(dist_to_target))\n\ninformative_alpha_match <- best_params$informative_alphas\ninformative_beta_match <- best_params$informative_betas\n\ninformative_alpha_match\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 45.28644\n```\n\n\n:::\n\n```{.r .cell-code}\ninformative_beta_match\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 19.68976\n```\n\n\n:::\n\n```{.r .cell-code}\n##Informative Prior from Announcer\nalphas <- seq(0.01, 1000, length.out = 2000) \nbetas <- alphas / 3\n\n\n\ntarget_prob <- 0.04\nprob_less_0.7 <- pbeta(0.70, alphas, betas)\n\ntibble(alphas, betas, prob_less_0.7) |>\n  mutate(close_to_target = abs(prob_less_0.7 - target_prob)) |>\n  filter(close_to_target == min(close_to_target))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  alphas betas prob_less_0.7 close_to_target\n   <dbl> <dbl>         <dbl>           <dbl>\n1   182.  60.5        0.0400       0.0000205\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##When we created our informative priors, we assumed independence of points, ie\n##If Nadal wins two points in a row with his serve, the next serve was indepedent ##if the previous two or that all his opponents are of equal skill level\n## We are assuming game lengths are the same, like some tennis matches, \n## Nadal will serve a lot more\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nps <- seq(0, 1, length.out = 1000)\n\nnoninformative_alpha <- 1\nnoninformative_beta <- 1\n\ninformative_alpha_match <- 45.28644\ninformative_beta_match <- 19.68976\n\ninformative_alpha_announce <- 181.599\ninformative_beta_announce <- 60.53299\n\nnoninformative_prior <- dbeta(ps, noninformative_alpha, noninformative_beta)\ninformative_prior <- dbeta(ps, informative_alpha_match, informative_beta_match)\ninformative_prior_announce <- dbeta(ps, informative_alpha_announce, informative_beta_announce)\n\nprior_plot <- tibble(ps, noninformative_prior, informative_prior, informative_prior_announce) |>\n  pivot_longer(2:4, names_to = \"prior_type\", values_to = \"density\") |>\n  mutate(prior_type = recode(prior_type,\n                             \"noninformative_prior\" = \"Non-informative Prior\",\n                             \"informative_prior\" = \"Informative Prior (Match Data)\",\n                             \"informative_prior_announce\" = \"Informative Prior (Announcer)\"))\n\nggplot(data = prior_plot, aes(x = ps, y = density, colour = prior_type)) +\n  geom_line() +\n  scale_colour_viridis_d(end = 0.9) +\n  theme_minimal() +\n  labs(x = \"p (Probability Nadal wins point on serve)\",\n       y = \"Density\",\n       colour = \"Prior Type\",\n       title = \"Three Prior Distributions for Nadal's Serve Performance\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nps <- seq(0, 1, length.out = 1000)\n\nnoninformative_alpha <- 1+56\nnoninformative_beta <- 84 -56+1\n\ninformative_alpha_match <- 45.28644 +56\ninformative_beta_match <- 84-56+19.68976\n\ninformative_alpha_announce <- 181.599+56\ninformative_beta_announce <- 84-56+60.53299\n\nnoninformative_post <- dbeta(ps, noninformative_alpha, noninformative_beta)\ninformative_post <- dbeta(ps, informative_alpha_match, informative_beta_match)\ninformative_post_announce <- dbeta(ps, informative_alpha_announce, informative_beta_announce)\n\npost_plot <- tibble(ps, noninformative_post, informative_post, informative_post_announce) |>\n  pivot_longer(2:4, names_to = \"prior_type\", values_to = \"density\") |>\n  mutate(prior_type = recode(prior_type,\n                             \"noninformative_prior\" = \"Non-informative Prior\",\n                             \"informative_prior\" = \"Informative Prior (Match Day)\",\n                             \"informative_prior_announce\" = \"Informative Prior (Announcer)\"))\n\nggplot(data = post_plot, aes(x = ps, y = density, colour = prior_type)) +\n  geom_line(size=1.2) +\n  scale_colour_viridis_d(end = 0.9) +\n  theme_minimal() +\n  labs(x = \"p (Probability Nadal wins point on serve)\",\n       y = \"Density\",\n       colour = \"Prior Type\",\n       title = \"Three Posterior Distributions for Nadal's Serve Performance\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnoninformative_alpha <- 1+56\nnoninformative_beta <- 84 -56+1 \n\ninformative_alpha_match <- 45.28644 +56\ninformative_beta_match <- 84-56+19.68976\n\ninformative_alpha_announce <- 181.599+56\ninformative_beta_announce <- 84-56+60.53299\n\n\nmean_noninformative <- 57/ (57+29)\nmean_informative <- 101.28644/ (101.28644+ 47.68976)\nmean_informative_announce <- 237.599/(88.53299+237.599)\n\nmean_noninformative\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6627907\n```\n\n\n:::\n\n```{.r .cell-code}\nmean_informative\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6798834\n```\n\n\n:::\n\n```{.r .cell-code}\nmean_informative_announce\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7285363\n```\n\n\n:::\n\n```{.r .cell-code}\n##NonInformative\nqbeta(0.05,57,29)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5772453\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.95,57,29)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7440061\n```\n\n\n:::\n\n```{.r .cell-code}\n##Informative\nqbeta(0.05,101.28644,47.68976)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6158464\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.95,101.28644,47.68976)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7411652\n```\n\n\n:::\n\n```{.r .cell-code}\n##Informative_Announce\nqbeta(0.05,237.599,88.53299)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6873017\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.95,237.599,88.53299)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7681751\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## (1)The credible interval for noninformative (0.577;0.744)\n## (2)The credible interval for informative_novak_stats (0.6158;0.7412)\n## (3)The credible intervals for informative_announce (0.687,0.768)\n\n## The posteriors differ because the priors have different assumptions:\n## The noninformative is driven simply by the data\n## The match data informative one is based on match data and the data\n## The announcer posterior has a very strong prior so may be overpowering \n## the data somewhat\n\n##The variance of the noninformative is the highest as shown by the graph\n\n##I would choose the informative posterior(2) using the match stats for the prior\n##The reason I have chosen this one is I believe the announcers one is too narrow\n## Nadal is the greatest tennis player on clay, so therefore he will have an\n## extremely high serve win ratio but the intial question was, what will his win \n## serve ratio be against Novak, who is an incredible tennis player too.\n## The announcer posterior is over confident in Nadal's serve when playing Novak,\n## as we assumed independence and that every opponent is equal but not every \n## opponent is equal. I feel that the announcer one is overdriven by the prior.\n\n## We do not lose much on an credible interval when selecting (2) over (3) and \n## looking at the density graphs, I feel that the little moved less graph is \n## more reflective of when Nadal plays Novak\n\n## What I found from this project is that a posterior can be overdriven by\n## a prior if the prior is too strong, What this does is make the density too \n## high and overstated by the prior. I learned that the smallest credible \n## interval isnt always the best. You have to consider a lot of factors to choose\n## the best predictor\n```\n:::\n\n\n\n\n## \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}